/*
 * This file is generated by jOOQ.
 */
package org.jooq.covspectrum.tables.records


import java.time.LocalDate

import org.jooq.Field
import org.jooq.Record10
import org.jooq.Row10
import org.jooq.covspectrum.tables.SpectrumCases
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class SpectrumCasesRecord() : TableRecordImpl<SpectrumCasesRecord>(SpectrumCases.SPECTRUM_CASES), Record10<String?, String?, String?, LocalDate?, Int?, String?, Boolean?, Boolean?, Long?, Int?> {

    var region: String?
        set(value) = set(0, value)
        get() = get(0) as String?

    var country: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var division: String?
        set(value) = set(2, value)
        get() = get(2) as String?

    var date: LocalDate?
        set(value) = set(3, value)
        get() = get(3) as LocalDate?

    var age: Int?
        set(value) = set(4, value)
        get() = get(4) as Int?

    var sex: String?
        set(value) = set(5, value)
        get() = get(5) as String?

    var hospitalized: Boolean?
        set(value) = set(6, value)
        get() = get(6) as Boolean?

    var died: Boolean?
        set(value) = set(7, value)
        get() = get(7) as Boolean?

    var newCases: Long?
        set(value) = set(8, value)
        get() = get(8) as Long?

    var newDeaths: Int?
        set(value) = set(9, value)
        get() = get(9) as Int?

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row10<String?, String?, String?, LocalDate?, Int?, String?, Boolean?, Boolean?, Long?, Int?> = super.fieldsRow() as Row10<String?, String?, String?, LocalDate?, Int?, String?, Boolean?, Boolean?, Long?, Int?>
    override fun valuesRow(): Row10<String?, String?, String?, LocalDate?, Int?, String?, Boolean?, Boolean?, Long?, Int?> = super.valuesRow() as Row10<String?, String?, String?, LocalDate?, Int?, String?, Boolean?, Boolean?, Long?, Int?>
    override fun field1(): Field<String?> = SpectrumCases.SPECTRUM_CASES.REGION
    override fun field2(): Field<String?> = SpectrumCases.SPECTRUM_CASES.COUNTRY
    override fun field3(): Field<String?> = SpectrumCases.SPECTRUM_CASES.DIVISION
    override fun field4(): Field<LocalDate?> = SpectrumCases.SPECTRUM_CASES.DATE
    override fun field5(): Field<Int?> = SpectrumCases.SPECTRUM_CASES.AGE
    override fun field6(): Field<String?> = SpectrumCases.SPECTRUM_CASES.SEX
    override fun field7(): Field<Boolean?> = SpectrumCases.SPECTRUM_CASES.HOSPITALIZED
    override fun field8(): Field<Boolean?> = SpectrumCases.SPECTRUM_CASES.DIED
    override fun field9(): Field<Long?> = SpectrumCases.SPECTRUM_CASES.NEW_CASES
    override fun field10(): Field<Int?> = SpectrumCases.SPECTRUM_CASES.NEW_DEATHS
    override fun component1(): String? = region
    override fun component2(): String? = country
    override fun component3(): String? = division
    override fun component4(): LocalDate? = date
    override fun component5(): Int? = age
    override fun component6(): String? = sex
    override fun component7(): Boolean? = hospitalized
    override fun component8(): Boolean? = died
    override fun component9(): Long? = newCases
    override fun component10(): Int? = newDeaths
    override fun value1(): String? = region
    override fun value2(): String? = country
    override fun value3(): String? = division
    override fun value4(): LocalDate? = date
    override fun value5(): Int? = age
    override fun value6(): String? = sex
    override fun value7(): Boolean? = hospitalized
    override fun value8(): Boolean? = died
    override fun value9(): Long? = newCases
    override fun value10(): Int? = newDeaths

    override fun value1(value: String?): SpectrumCasesRecord {
        this.region = value
        return this
    }

    override fun value2(value: String?): SpectrumCasesRecord {
        this.country = value
        return this
    }

    override fun value3(value: String?): SpectrumCasesRecord {
        this.division = value
        return this
    }

    override fun value4(value: LocalDate?): SpectrumCasesRecord {
        this.date = value
        return this
    }

    override fun value5(value: Int?): SpectrumCasesRecord {
        this.age = value
        return this
    }

    override fun value6(value: String?): SpectrumCasesRecord {
        this.sex = value
        return this
    }

    override fun value7(value: Boolean?): SpectrumCasesRecord {
        this.hospitalized = value
        return this
    }

    override fun value8(value: Boolean?): SpectrumCasesRecord {
        this.died = value
        return this
    }

    override fun value9(value: Long?): SpectrumCasesRecord {
        this.newCases = value
        return this
    }

    override fun value10(value: Int?): SpectrumCasesRecord {
        this.newDeaths = value
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: LocalDate?, value5: Int?, value6: String?, value7: Boolean?, value8: Boolean?, value9: Long?, value10: Int?): SpectrumCasesRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        return this
    }

    /**
     * Create a detached, initialised SpectrumCasesRecord
     */
    constructor(region: String? = null, country: String? = null, division: String? = null, date: LocalDate? = null, age: Int? = null, sex: String? = null, hospitalized: Boolean? = null, died: Boolean? = null, newCases: Long? = null, newDeaths: Int? = null): this() {
        this.region = region
        this.country = country
        this.division = division
        this.date = date
        this.age = age
        this.sex = sex
        this.hospitalized = hospitalized
        this.died = died
        this.newCases = newCases
        this.newDeaths = newDeaths
    }
}
