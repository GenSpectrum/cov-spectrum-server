/*
 * This file is generated by jOOQ.
 */
package org.jooq.covspectrum.tables


import java.time.LocalDate

import kotlin.collections.List

import org.jooq.Field
import org.jooq.ForeignKey
import org.jooq.Name
import org.jooq.Record
import org.jooq.Row7
import org.jooq.Schema
import org.jooq.Table
import org.jooq.TableField
import org.jooq.TableOptions
import org.jooq.UniqueKey
import org.jooq.covspectrum.Public
import org.jooq.covspectrum.keys.EXT_OWID_GLOBAL_CASES_PKEY
import org.jooq.covspectrum.tables.records.ExtOwidGlobalCasesRecord
import org.jooq.impl.DSL
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType
import org.jooq.impl.TableImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ExtOwidGlobalCases(
    alias: Name,
    child: Table<out Record>?,
    path: ForeignKey<out Record, ExtOwidGlobalCasesRecord>?,
    aliased: Table<ExtOwidGlobalCasesRecord>?,
    parameters: Array<Field<*>?>?
): TableImpl<ExtOwidGlobalCasesRecord>(
    alias,
    Public.PUBLIC,
    child,
    path,
    aliased,
    parameters,
    DSL.comment(""),
    TableOptions.table()
) {
    companion object {

        /**
         * The reference instance of <code>public.ext_owid_global_cases</code>
         */
        val EXT_OWID_GLOBAL_CASES = ExtOwidGlobalCases()
    }

    /**
     * The class holding records for this type
     */
    override fun getRecordType(): Class<ExtOwidGlobalCasesRecord> = ExtOwidGlobalCasesRecord::class.java

    /**
     * The column <code>public.ext_owid_global_cases.iso_country</code>.
     */
    val ISO_COUNTRY: TableField<ExtOwidGlobalCasesRecord, String?> = createField(DSL.name("iso_country"), SQLDataType.CLOB.nullable(false), this, "")

    /**
     * The column <code>public.ext_owid_global_cases.country</code>.
     */
    val COUNTRY: TableField<ExtOwidGlobalCasesRecord, String?> = createField(DSL.name("country"), SQLDataType.CLOB, this, "")

    /**
     * The column <code>public.ext_owid_global_cases.date</code>.
     */
    val DATE: TableField<ExtOwidGlobalCasesRecord, LocalDate?> = createField(DSL.name("date"), SQLDataType.LOCALDATE.nullable(false), this, "")

    /**
     * The column <code>public.ext_owid_global_cases.new_cases_per_million</code>.
     */
    val NEW_CASES_PER_MILLION: TableField<ExtOwidGlobalCasesRecord, Double?> = createField(DSL.name("new_cases_per_million"), SQLDataType.DOUBLE, this, "")

    /**
     * The column <code>public.ext_owid_global_cases.new_deaths_per_million</code>.
     */
    val NEW_DEATHS_PER_MILLION: TableField<ExtOwidGlobalCasesRecord, Double?> = createField(DSL.name("new_deaths_per_million"), SQLDataType.DOUBLE, this, "")

    /**
     * The column <code>public.ext_owid_global_cases.new_cases</code>.
     */
    val NEW_CASES: TableField<ExtOwidGlobalCasesRecord, Int?> = createField(DSL.name("new_cases"), SQLDataType.INTEGER, this, "")

    /**
     * The column <code>public.ext_owid_global_cases.new_deaths</code>.
     */
    val NEW_DEATHS: TableField<ExtOwidGlobalCasesRecord, Int?> = createField(DSL.name("new_deaths"), SQLDataType.INTEGER, this, "")

    private constructor(alias: Name, aliased: Table<ExtOwidGlobalCasesRecord>?): this(alias, null, null, aliased, null)
    private constructor(alias: Name, aliased: Table<ExtOwidGlobalCasesRecord>?, parameters: Array<Field<*>?>?): this(alias, null, null, aliased, parameters)

    /**
     * Create an aliased <code>public.ext_owid_global_cases</code> table reference
     */
    constructor(alias: String): this(DSL.name(alias))

    /**
     * Create an aliased <code>public.ext_owid_global_cases</code> table reference
     */
    constructor(alias: Name): this(alias, null)

    /**
     * Create a <code>public.ext_owid_global_cases</code> table reference
     */
    constructor(): this(DSL.name("ext_owid_global_cases"), null)

    constructor(child: Table<out Record>, key: ForeignKey<out Record, ExtOwidGlobalCasesRecord>): this(Internal.createPathAlias(child, key), child, key, EXT_OWID_GLOBAL_CASES, null)
    override fun getSchema(): Schema = Public.PUBLIC
    override fun getPrimaryKey(): UniqueKey<ExtOwidGlobalCasesRecord> = EXT_OWID_GLOBAL_CASES_PKEY
    override fun getKeys(): List<UniqueKey<ExtOwidGlobalCasesRecord>> = listOf(EXT_OWID_GLOBAL_CASES_PKEY)
    override fun `as`(alias: String): ExtOwidGlobalCases = ExtOwidGlobalCases(DSL.name(alias), this)
    override fun `as`(alias: Name): ExtOwidGlobalCases = ExtOwidGlobalCases(alias, this)

    /**
     * Rename this table
     */
    override fun rename(name: String): ExtOwidGlobalCases = ExtOwidGlobalCases(DSL.name(name), null)

    /**
     * Rename this table
     */
    override fun rename(name: Name): ExtOwidGlobalCases = ExtOwidGlobalCases(name, null)

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------
    override fun fieldsRow(): Row7<String?, String?, LocalDate?, Double?, Double?, Int?, Int?> = super.fieldsRow() as Row7<String?, String?, LocalDate?, Double?, Double?, Int?, Int?>
}
