/*
 * This file is generated by jOOQ.
 */
package org.jooq.covspectrum.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.JSONB;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.covspectrum.Indexes;
import org.jooq.covspectrum.Keys;
import org.jooq.covspectrum.Public;
import org.jooq.covspectrum.tables.records.SpectrumNewInterestingVariantRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpectrumNewInterestingVariant extends TableImpl<SpectrumNewInterestingVariantRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.spectrum_new_interesting_variant</code>
     */
    public static final SpectrumNewInterestingVariant SPECTRUM_NEW_INTERESTING_VARIANT = new SpectrumNewInterestingVariant();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SpectrumNewInterestingVariantRecord> getRecordType() {
        return SpectrumNewInterestingVariantRecord.class;
    }

    /**
     * The column <code>public.spectrum_new_interesting_variant.id</code>.
     */
    public final TableField<SpectrumNewInterestingVariantRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.spectrum_new_interesting_variant.insertion_timestamp</code>.
     */
    public final TableField<SpectrumNewInterestingVariantRecord, LocalDateTime> INSERTION_TIMESTAMP = createField(DSL.name("insertion_timestamp"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.spectrum_new_interesting_variant.country</code>.
     */
    public final TableField<SpectrumNewInterestingVariantRecord, String> COUNTRY = createField(DSL.name("country"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.spectrum_new_interesting_variant.data_type</code>.
     */
    public final TableField<SpectrumNewInterestingVariantRecord, JSONB> DATA_TYPE = createField(DSL.name("data_type"), SQLDataType.JSONB, this, "");

    /**
     * The column <code>public.spectrum_new_interesting_variant.result</code>.
     */
    public final TableField<SpectrumNewInterestingVariantRecord, String> RESULT = createField(DSL.name("result"), SQLDataType.CLOB.nullable(false), this, "");

    private SpectrumNewInterestingVariant(Name alias, Table<SpectrumNewInterestingVariantRecord> aliased) {
        this(alias, aliased, null);
    }

    private SpectrumNewInterestingVariant(Name alias, Table<SpectrumNewInterestingVariantRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.spectrum_new_interesting_variant</code> table reference
     */
    public SpectrumNewInterestingVariant(String alias) {
        this(DSL.name(alias), SPECTRUM_NEW_INTERESTING_VARIANT);
    }

    /**
     * Create an aliased <code>public.spectrum_new_interesting_variant</code> table reference
     */
    public SpectrumNewInterestingVariant(Name alias) {
        this(alias, SPECTRUM_NEW_INTERESTING_VARIANT);
    }

    /**
     * Create a <code>public.spectrum_new_interesting_variant</code> table reference
     */
    public SpectrumNewInterestingVariant() {
        this(DSL.name("spectrum_new_interesting_variant"), null);
    }

    public <O extends Record> SpectrumNewInterestingVariant(Table<O> child, ForeignKey<O, SpectrumNewInterestingVariantRecord> key) {
        super(child, key, SPECTRUM_NEW_INTERESTING_VARIANT);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SPECTRUM_NEW_INTERESTING_VARIANT_COUNTRY_IDX, Indexes.SPECTRUM_NEW_INTERESTING_VARIANT_DATA_TYPE_IDX, Indexes.SPECTRUM_NEW_INTERESTING_VARIANT_INSERTION_TIMESTAMP_IDX);
    }

    @Override
    public Identity<SpectrumNewInterestingVariantRecord, Integer> getIdentity() {
        return (Identity<SpectrumNewInterestingVariantRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<SpectrumNewInterestingVariantRecord> getPrimaryKey() {
        return Keys.SPECTRUM_NEW_INTERESTING_VARIANT_PKEY;
    }

    @Override
    public List<UniqueKey<SpectrumNewInterestingVariantRecord>> getKeys() {
        return Arrays.<UniqueKey<SpectrumNewInterestingVariantRecord>>asList(Keys.SPECTRUM_NEW_INTERESTING_VARIANT_PKEY);
    }

    @Override
    public List<ForeignKey<SpectrumNewInterestingVariantRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SpectrumNewInterestingVariantRecord, ?>>asList(Keys.SPECTRUM_NEW_INTERESTING_VARIANT__SPECTRUM_NEW_INTERESTING_VARIANT_SPECTRUM_COUNTRY_NAME_FK);
    }

    private transient SpectrumCountry _spectrumCountry;

    public SpectrumCountry spectrumCountry() {
        if (_spectrumCountry == null)
            _spectrumCountry = new SpectrumCountry(this, Keys.SPECTRUM_NEW_INTERESTING_VARIANT__SPECTRUM_NEW_INTERESTING_VARIANT_SPECTRUM_COUNTRY_NAME_FK);

        return _spectrumCountry;
    }

    @Override
    public SpectrumNewInterestingVariant as(String alias) {
        return new SpectrumNewInterestingVariant(DSL.name(alias), this);
    }

    @Override
    public SpectrumNewInterestingVariant as(Name alias) {
        return new SpectrumNewInterestingVariant(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SpectrumNewInterestingVariant rename(String name) {
        return new SpectrumNewInterestingVariant(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SpectrumNewInterestingVariant rename(Name name) {
        return new SpectrumNewInterestingVariant(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, LocalDateTime, String, JSONB, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
