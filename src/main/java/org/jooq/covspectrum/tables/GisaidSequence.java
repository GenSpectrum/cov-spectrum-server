/*
 * This file is generated by jOOQ.
 */
package org.jooq.covspectrum.tables;


import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.covspectrum.Indexes;
import org.jooq.covspectrum.Keys;
import org.jooq.covspectrum.Public;
import org.jooq.covspectrum.tables.records.GisaidSequenceRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GisaidSequence extends TableImpl<GisaidSequenceRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.gisaid_sequence</code>
     */
    public static final GisaidSequence GISAID_SEQUENCE = new GisaidSequence();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GisaidSequenceRecord> getRecordType() {
        return GisaidSequenceRecord.class;
    }

    /**
     * The column <code>public.gisaid_sequence.strain</code>.
     */
    public final TableField<GisaidSequenceRecord, String> STRAIN = createField(DSL.name("strain"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.gisaid_sequence.virus</code>.
     */
    public final TableField<GisaidSequenceRecord, String> VIRUS = createField(DSL.name("virus"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.gisaid_epi_isl</code>.
     */
    public final TableField<GisaidSequenceRecord, String> GISAID_EPI_ISL = createField(DSL.name("gisaid_epi_isl"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.genbank_accession</code>.
     */
    public final TableField<GisaidSequenceRecord, String> GENBANK_ACCESSION = createField(DSL.name("genbank_accession"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.date</code>.
     */
    public final TableField<GisaidSequenceRecord, LocalDate> DATE = createField(DSL.name("date"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>public.gisaid_sequence.date_str</code>.
     */
    public final TableField<GisaidSequenceRecord, String> DATE_STR = createField(DSL.name("date_str"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.region</code>.
     */
    public final TableField<GisaidSequenceRecord, String> REGION = createField(DSL.name("region"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.country</code>.
     */
    public final TableField<GisaidSequenceRecord, String> COUNTRY = createField(DSL.name("country"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.division</code>.
     */
    public final TableField<GisaidSequenceRecord, String> DIVISION = createField(DSL.name("division"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.location</code>.
     */
    public final TableField<GisaidSequenceRecord, String> LOCATION = createField(DSL.name("location"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.region_exposure</code>.
     */
    public final TableField<GisaidSequenceRecord, String> REGION_EXPOSURE = createField(DSL.name("region_exposure"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.country_exposure</code>.
     */
    public final TableField<GisaidSequenceRecord, String> COUNTRY_EXPOSURE = createField(DSL.name("country_exposure"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.division_exposure</code>.
     */
    public final TableField<GisaidSequenceRecord, String> DIVISION_EXPOSURE = createField(DSL.name("division_exposure"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.segment</code>.
     */
    public final TableField<GisaidSequenceRecord, String> SEGMENT = createField(DSL.name("segment"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.length</code>.
     */
    public final TableField<GisaidSequenceRecord, Integer> LENGTH = createField(DSL.name("length"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.gisaid_sequence.host</code>.
     */
    public final TableField<GisaidSequenceRecord, String> HOST = createField(DSL.name("host"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.age</code>.
     */
    public final TableField<GisaidSequenceRecord, Integer> AGE = createField(DSL.name("age"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.gisaid_sequence.sex</code>.
     */
    public final TableField<GisaidSequenceRecord, String> SEX = createField(DSL.name("sex"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextstrain_clade</code>.
     */
    public final TableField<GisaidSequenceRecord, String> NEXTSTRAIN_CLADE = createField(DSL.name("nextstrain_clade"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.pangolin_lineage</code>.
     */
    public final TableField<GisaidSequenceRecord, String> PANGOLIN_LINEAGE = createField(DSL.name("pangolin_lineage"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.gisaid_clade</code>.
     */
    public final TableField<GisaidSequenceRecord, String> GISAID_CLADE = createField(DSL.name("gisaid_clade"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.originating_lab</code>.
     */
    public final TableField<GisaidSequenceRecord, String> ORIGINATING_LAB = createField(DSL.name("originating_lab"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.submitting_lab</code>.
     */
    public final TableField<GisaidSequenceRecord, String> SUBMITTING_LAB = createField(DSL.name("submitting_lab"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.authors</code>.
     */
    public final TableField<GisaidSequenceRecord, String> AUTHORS = createField(DSL.name("authors"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.url</code>.
     */
    public final TableField<GisaidSequenceRecord, String> URL = createField(DSL.name("url"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.title</code>.
     */
    public final TableField<GisaidSequenceRecord, String> TITLE = createField(DSL.name("title"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.paper_url</code>.
     */
    public final TableField<GisaidSequenceRecord, String> PAPER_URL = createField(DSL.name("paper_url"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.date_submitted</code>.
     */
    public final TableField<GisaidSequenceRecord, LocalDate> DATE_SUBMITTED = createField(DSL.name("date_submitted"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>public.gisaid_sequence.original_seq</code>.
     */
    public final TableField<GisaidSequenceRecord, String> ORIGINAL_SEQ = createField(DSL.name("original_seq"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.aligned_seq</code>.
     */
    public final TableField<GisaidSequenceRecord, String> ALIGNED_SEQ = createField(DSL.name("aligned_seq"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.purpose_of_sequencing</code>.
     */
    public final TableField<GisaidSequenceRecord, String> PURPOSE_OF_SEQUENCING = createField(DSL.name("purpose_of_sequencing"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_clade</code>.
     */
    public final TableField<GisaidSequenceRecord, String> NEXTCLADE_CLADE = createField(DSL.name("nextclade_clade"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_qc_overall_score</code>.
     */
    public final TableField<GisaidSequenceRecord, Double> NEXTCLADE_QC_OVERALL_SCORE = createField(DSL.name("nextclade_qc_overall_score"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_qc_overall_status</code>.
     */
    public final TableField<GisaidSequenceRecord, String> NEXTCLADE_QC_OVERALL_STATUS = createField(DSL.name("nextclade_qc_overall_status"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_total_gaps</code>.
     */
    public final TableField<GisaidSequenceRecord, Integer> NEXTCLADE_TOTAL_GAPS = createField(DSL.name("nextclade_total_gaps"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_total_insertions</code>.
     */
    public final TableField<GisaidSequenceRecord, Integer> NEXTCLADE_TOTAL_INSERTIONS = createField(DSL.name("nextclade_total_insertions"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_total_missing</code>.
     */
    public final TableField<GisaidSequenceRecord, Integer> NEXTCLADE_TOTAL_MISSING = createField(DSL.name("nextclade_total_missing"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_total_mutations</code>.
     */
    public final TableField<GisaidSequenceRecord, Integer> NEXTCLADE_TOTAL_MUTATIONS = createField(DSL.name("nextclade_total_mutations"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_total_non_acgtns</code>.
     */
    public final TableField<GisaidSequenceRecord, Integer> NEXTCLADE_TOTAL_NON_ACGTNS = createField(DSL.name("nextclade_total_non_acgtns"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_total_pcr_primer_changes</code>.
     */
    public final TableField<GisaidSequenceRecord, Integer> NEXTCLADE_TOTAL_PCR_PRIMER_CHANGES = createField(DSL.name("nextclade_total_pcr_primer_changes"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_alignment_start</code>.
     */
    public final TableField<GisaidSequenceRecord, Integer> NEXTCLADE_ALIGNMENT_START = createField(DSL.name("nextclade_alignment_start"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_alignment_end</code>.
     */
    public final TableField<GisaidSequenceRecord, Integer> NEXTCLADE_ALIGNMENT_END = createField(DSL.name("nextclade_alignment_end"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_alignment_score</code>.
     */
    public final TableField<GisaidSequenceRecord, Integer> NEXTCLADE_ALIGNMENT_SCORE = createField(DSL.name("nextclade_alignment_score"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_qc_missing_data_score</code>.
     */
    public final TableField<GisaidSequenceRecord, Double> NEXTCLADE_QC_MISSING_DATA_SCORE = createField(DSL.name("nextclade_qc_missing_data_score"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_qc_missing_data_status</code>.
     */
    public final TableField<GisaidSequenceRecord, String> NEXTCLADE_QC_MISSING_DATA_STATUS = createField(DSL.name("nextclade_qc_missing_data_status"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_qc_missing_data_total</code>.
     */
    public final TableField<GisaidSequenceRecord, Integer> NEXTCLADE_QC_MISSING_DATA_TOTAL = createField(DSL.name("nextclade_qc_missing_data_total"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_qc_mixed_sites_score</code>.
     */
    public final TableField<GisaidSequenceRecord, Double> NEXTCLADE_QC_MIXED_SITES_SCORE = createField(DSL.name("nextclade_qc_mixed_sites_score"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_qc_mixed_sites_status</code>.
     */
    public final TableField<GisaidSequenceRecord, String> NEXTCLADE_QC_MIXED_SITES_STATUS = createField(DSL.name("nextclade_qc_mixed_sites_status"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_qc_mixed_sites_total</code>.
     */
    public final TableField<GisaidSequenceRecord, Integer> NEXTCLADE_QC_MIXED_SITES_TOTAL = createField(DSL.name("nextclade_qc_mixed_sites_total"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_qc_private_mutations_cutoff</code>.
     */
    public final TableField<GisaidSequenceRecord, Integer> NEXTCLADE_QC_PRIVATE_MUTATIONS_CUTOFF = createField(DSL.name("nextclade_qc_private_mutations_cutoff"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_qc_private_mutations_excess</code>.
     */
    public final TableField<GisaidSequenceRecord, Integer> NEXTCLADE_QC_PRIVATE_MUTATIONS_EXCESS = createField(DSL.name("nextclade_qc_private_mutations_excess"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_qc_private_mutations_score</code>.
     */
    public final TableField<GisaidSequenceRecord, Double> NEXTCLADE_QC_PRIVATE_MUTATIONS_SCORE = createField(DSL.name("nextclade_qc_private_mutations_score"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_qc_private_mutations_status</code>.
     */
    public final TableField<GisaidSequenceRecord, String> NEXTCLADE_QC_PRIVATE_MUTATIONS_STATUS = createField(DSL.name("nextclade_qc_private_mutations_status"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_qc_private_mutations_total</code>.
     */
    public final TableField<GisaidSequenceRecord, Integer> NEXTCLADE_QC_PRIVATE_MUTATIONS_TOTAL = createField(DSL.name("nextclade_qc_private_mutations_total"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_qc_snp_clusters_clustered</code>.
     */
    public final TableField<GisaidSequenceRecord, String> NEXTCLADE_QC_SNP_CLUSTERS_CLUSTERED = createField(DSL.name("nextclade_qc_snp_clusters_clustered"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_qc_snp_clusters_score</code>.
     */
    public final TableField<GisaidSequenceRecord, Double> NEXTCLADE_QC_SNP_CLUSTERS_SCORE = createField(DSL.name("nextclade_qc_snp_clusters_score"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_qc_snp_clusters_status</code>.
     */
    public final TableField<GisaidSequenceRecord, String> NEXTCLADE_QC_SNP_CLUSTERS_STATUS = createField(DSL.name("nextclade_qc_snp_clusters_status"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_qc_snp_clusters_total</code>.
     */
    public final TableField<GisaidSequenceRecord, Integer> NEXTCLADE_QC_SNP_CLUSTERS_TOTAL = createField(DSL.name("nextclade_qc_snp_clusters_total"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.gisaid_sequence.nextclade_errors</code>.
     */
    public final TableField<GisaidSequenceRecord, String> NEXTCLADE_ERRORS = createField(DSL.name("nextclade_errors"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.iso_country</code>.
     */
    public final TableField<GisaidSequenceRecord, String> ISO_COUNTRY = createField(DSL.name("iso_country"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.gisaid_sequence.iso_country_exposure</code>.
     */
    public final TableField<GisaidSequenceRecord, String> ISO_COUNTRY_EXPOSURE = createField(DSL.name("iso_country_exposure"), SQLDataType.CLOB, this, "");

    private GisaidSequence(Name alias, Table<GisaidSequenceRecord> aliased) {
        this(alias, aliased, null);
    }

    private GisaidSequence(Name alias, Table<GisaidSequenceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.gisaid_sequence</code> table reference
     */
    public GisaidSequence(String alias) {
        this(DSL.name(alias), GISAID_SEQUENCE);
    }

    /**
     * Create an aliased <code>public.gisaid_sequence</code> table reference
     */
    public GisaidSequence(Name alias) {
        this(alias, GISAID_SEQUENCE);
    }

    /**
     * Create a <code>public.gisaid_sequence</code> table reference
     */
    public GisaidSequence() {
        this(DSL.name("gisaid_sequence"), null);
    }

    public <O extends Record> GisaidSequence(Table<O> child, ForeignKey<O, GisaidSequenceRecord> key) {
        super(child, key, GISAID_SEQUENCE);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GISAID_SEQUENCE_AGE_INDEX2, Indexes.GISAID_SEQUENCE_COUNTRY_EXPOSURE_INDEX2, Indexes.GISAID_SEQUENCE_COUNTRY_INDEX2, Indexes.GISAID_SEQUENCE_DATE_INDEX2, Indexes.GISAID_SEQUENCE_DATE_SUBMITTED_INDEX2, Indexes.GISAID_SEQUENCE_DIVISION_EXPOSURE_INDEX2, Indexes.GISAID_SEQUENCE_DIVISION_INDEX2, Indexes.GISAID_SEQUENCE_GISAID_EPI_ISL_INDEX2, Indexes.GISAID_SEQUENCE_HOST_INDEX2, Indexes.GISAID_SEQUENCE_ORIGINATING_LAB_INDEX2, Indexes.GISAID_SEQUENCE_REGION_EXPOSURE_INDEX2, Indexes.GISAID_SEQUENCE_REGION_INDEX2, Indexes.GISAID_SEQUENCE_SEX_INDEX2, Indexes.GISAID_SEQUENCE_STAGING_ISO_COUNTRY_IDX, Indexes.GISAID_SEQUENCE_SUBMITTING_LAB_INDEX2);
    }

    @Override
    public UniqueKey<GisaidSequenceRecord> getPrimaryKey() {
        return Keys.GISAID_SEQUENCE_STAGING_PKEY;
    }

    @Override
    public List<UniqueKey<GisaidSequenceRecord>> getKeys() {
        return Arrays.<UniqueKey<GisaidSequenceRecord>>asList(Keys.GISAID_SEQUENCE_STAGING_PKEY);
    }

    @Override
    public GisaidSequence as(String alias) {
        return new GisaidSequence(DSL.name(alias), this);
    }

    @Override
    public GisaidSequence as(Name alias) {
        return new GisaidSequence(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GisaidSequence rename(String name) {
        return new GisaidSequence(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GisaidSequence rename(Name name) {
        return new GisaidSequence(name, null);
    }
}
