/*
 * This file is generated by jOOQ.
 */
package org.jooq.covspectrum.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSONB;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.covspectrum.Keys;
import org.jooq.covspectrum.Public;
import org.jooq.covspectrum.tables.records.SpectrumWasteWaterResultRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpectrumWasteWaterResult extends TableImpl<SpectrumWasteWaterResultRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.spectrum_waste_water_result</code>
     */
    public static final SpectrumWasteWaterResult SPECTRUM_WASTE_WATER_RESULT = new SpectrumWasteWaterResult();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SpectrumWasteWaterResultRecord> getRecordType() {
        return SpectrumWasteWaterResultRecord.class;
    }

    /**
     * The column <code>public.spectrum_waste_water_result.variant_name</code>.
     */
    public final TableField<SpectrumWasteWaterResultRecord, String> VARIANT_NAME = createField(DSL.name("variant_name"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.spectrum_waste_water_result.location</code>.
     */
    public final TableField<SpectrumWasteWaterResultRecord, String> LOCATION = createField(DSL.name("location"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.spectrum_waste_water_result.data</code>.
     */
    public final TableField<SpectrumWasteWaterResultRecord, JSONB> DATA = createField(DSL.name("data"), SQLDataType.JSONB.nullable(false), this, "");

    private SpectrumWasteWaterResult(Name alias, Table<SpectrumWasteWaterResultRecord> aliased) {
        this(alias, aliased, null);
    }

    private SpectrumWasteWaterResult(Name alias, Table<SpectrumWasteWaterResultRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.spectrum_waste_water_result</code> table reference
     */
    public SpectrumWasteWaterResult(String alias) {
        this(DSL.name(alias), SPECTRUM_WASTE_WATER_RESULT);
    }

    /**
     * Create an aliased <code>public.spectrum_waste_water_result</code> table reference
     */
    public SpectrumWasteWaterResult(Name alias) {
        this(alias, SPECTRUM_WASTE_WATER_RESULT);
    }

    /**
     * Create a <code>public.spectrum_waste_water_result</code> table reference
     */
    public SpectrumWasteWaterResult() {
        this(DSL.name("spectrum_waste_water_result"), null);
    }

    public <O extends Record> SpectrumWasteWaterResult(Table<O> child, ForeignKey<O, SpectrumWasteWaterResultRecord> key) {
        super(child, key, SPECTRUM_WASTE_WATER_RESULT);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<SpectrumWasteWaterResultRecord> getPrimaryKey() {
        return Keys.X_SPECTRUM_WASTE_WATER_RESULT_PKEY;
    }

    @Override
    public List<UniqueKey<SpectrumWasteWaterResultRecord>> getKeys() {
        return Arrays.<UniqueKey<SpectrumWasteWaterResultRecord>>asList(Keys.X_SPECTRUM_WASTE_WATER_RESULT_PKEY);
    }

    @Override
    public SpectrumWasteWaterResult as(String alias) {
        return new SpectrumWasteWaterResult(DSL.name(alias), this);
    }

    @Override
    public SpectrumWasteWaterResult as(Name alias) {
        return new SpectrumWasteWaterResult(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SpectrumWasteWaterResult rename(String name) {
        return new SpectrumWasteWaterResult(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SpectrumWasteWaterResult rename(Name name) {
        return new SpectrumWasteWaterResult(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, JSONB> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
