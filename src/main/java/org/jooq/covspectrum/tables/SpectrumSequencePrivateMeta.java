/*
 * This file is generated by jOOQ.
 */
package org.jooq.covspectrum.tables;


import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.covspectrum.Indexes;
import org.jooq.covspectrum.Public;
import org.jooq.covspectrum.tables.records.SpectrumSequencePrivateMetaRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpectrumSequencePrivateMeta extends TableImpl<SpectrumSequencePrivateMetaRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.spectrum_sequence_private_meta</code>
     */
    public static final SpectrumSequencePrivateMeta SPECTRUM_SEQUENCE_PRIVATE_META = new SpectrumSequencePrivateMeta();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SpectrumSequencePrivateMetaRecord> getRecordType() {
        return SpectrumSequencePrivateMetaRecord.class;
    }

    /**
     * The column <code>public.spectrum_sequence_private_meta.sequence_name</code>.
     */
    public final TableField<SpectrumSequencePrivateMetaRecord, String> SEQUENCE_NAME = createField(DSL.name("sequence_name"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.spectrum_sequence_private_meta.date</code>.
     */
    public final TableField<SpectrumSequencePrivateMetaRecord, LocalDate> DATE = createField(DSL.name("date"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>public.spectrum_sequence_private_meta.region</code>.
     */
    public final TableField<SpectrumSequencePrivateMetaRecord, String> REGION = createField(DSL.name("region"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.spectrum_sequence_private_meta.country</code>.
     */
    public final TableField<SpectrumSequencePrivateMetaRecord, String> COUNTRY = createField(DSL.name("country"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.spectrum_sequence_private_meta.division</code>.
     */
    public final TableField<SpectrumSequencePrivateMetaRecord, String> DIVISION = createField(DSL.name("division"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.spectrum_sequence_private_meta.location</code>.
     */
    public final TableField<SpectrumSequencePrivateMetaRecord, String> LOCATION = createField(DSL.name("location"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.spectrum_sequence_private_meta.zip_code</code>.
     */
    public final TableField<SpectrumSequencePrivateMetaRecord, String> ZIP_CODE = createField(DSL.name("zip_code"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.spectrum_sequence_private_meta.host</code>.
     */
    public final TableField<SpectrumSequencePrivateMetaRecord, String> HOST = createField(DSL.name("host"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.spectrum_sequence_private_meta.age</code>.
     */
    public final TableField<SpectrumSequencePrivateMetaRecord, Integer> AGE = createField(DSL.name("age"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.spectrum_sequence_private_meta.sex</code>.
     */
    public final TableField<SpectrumSequencePrivateMetaRecord, String> SEX = createField(DSL.name("sex"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.spectrum_sequence_private_meta.submitting_lab</code>.
     */
    public final TableField<SpectrumSequencePrivateMetaRecord, String> SUBMITTING_LAB = createField(DSL.name("submitting_lab"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.spectrum_sequence_private_meta.originating_lab</code>.
     */
    public final TableField<SpectrumSequencePrivateMetaRecord, String> ORIGINATING_LAB = createField(DSL.name("originating_lab"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.spectrum_sequence_private_meta.hospitalized</code>.
     */
    public final TableField<SpectrumSequencePrivateMetaRecord, Boolean> HOSPITALIZED = createField(DSL.name("hospitalized"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.spectrum_sequence_private_meta.deceased</code>.
     */
    public final TableField<SpectrumSequencePrivateMetaRecord, Boolean> DECEASED = createField(DSL.name("deceased"), SQLDataType.BOOLEAN, this, "");

    private SpectrumSequencePrivateMeta(Name alias, Table<SpectrumSequencePrivateMetaRecord> aliased) {
        this(alias, aliased, null);
    }

    private SpectrumSequencePrivateMeta(Name alias, Table<SpectrumSequencePrivateMetaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.materializedView());
    }

    /**
     * Create an aliased <code>public.spectrum_sequence_private_meta</code> table reference
     */
    public SpectrumSequencePrivateMeta(String alias) {
        this(DSL.name(alias), SPECTRUM_SEQUENCE_PRIVATE_META);
    }

    /**
     * Create an aliased <code>public.spectrum_sequence_private_meta</code> table reference
     */
    public SpectrumSequencePrivateMeta(Name alias) {
        this(alias, SPECTRUM_SEQUENCE_PRIVATE_META);
    }

    /**
     * Create a <code>public.spectrum_sequence_private_meta</code> table reference
     */
    public SpectrumSequencePrivateMeta() {
        this(DSL.name("spectrum_sequence_private_meta"), null);
    }

    public <O extends Record> SpectrumSequencePrivateMeta(Table<O> child, ForeignKey<O, SpectrumSequencePrivateMetaRecord> key) {
        super(child, key, SPECTRUM_SEQUENCE_PRIVATE_META);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SPECTRUM_SEQUENCE_PRIVATE_META_AGE_IDX, Indexes.SPECTRUM_SEQUENCE_PRIVATE_META_COUNTRY_IDX, Indexes.SPECTRUM_SEQUENCE_PRIVATE_META_DATE_IDX, Indexes.SPECTRUM_SEQUENCE_PRIVATE_META_DIVISION_IDX, Indexes.SPECTRUM_SEQUENCE_PRIVATE_META_HOST_IDX, Indexes.SPECTRUM_SEQUENCE_PRIVATE_META_LOCATION_IDX, Indexes.SPECTRUM_SEQUENCE_PRIVATE_META_REGION_IDX, Indexes.SPECTRUM_SEQUENCE_PRIVATE_META_SEQUENCE_NAME_IDX, Indexes.SPECTRUM_SEQUENCE_PRIVATE_META_SEX_IDX, Indexes.SPECTRUM_SEQUENCE_PRIVATE_META_ZIP_CODE_IDX);
    }

    @Override
    public SpectrumSequencePrivateMeta as(String alias) {
        return new SpectrumSequencePrivateMeta(DSL.name(alias), this);
    }

    @Override
    public SpectrumSequencePrivateMeta as(Name alias) {
        return new SpectrumSequencePrivateMeta(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SpectrumSequencePrivateMeta rename(String name) {
        return new SpectrumSequencePrivateMeta(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SpectrumSequencePrivateMeta rename(Name name) {
        return new SpectrumSequencePrivateMeta(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<String, LocalDate, String, String, String, String, String, String, Integer, String, String, String, Boolean, Boolean> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
