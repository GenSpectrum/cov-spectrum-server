/*
 * This file is generated by jOOQ.
 */
package org.jooq.covspectrum.tables.records;


import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.covspectrum.tables.VariantMutationNucleotide;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VariantMutationNucleotideRecord extends UpdatableRecordImpl<VariantMutationNucleotideRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.variant_mutation_nucleotide.variant_name</code>.
     */
    public void setVariantName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.variant_mutation_nucleotide.variant_name</code>.
     */
    public String getVariantName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.variant_mutation_nucleotide.nucleotide_mutation</code>.
     */
    public void setNucleotideMutation(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.variant_mutation_nucleotide.nucleotide_mutation</code>.
     */
    public String getNucleotideMutation() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.variant_mutation_nucleotide.corresponding_aa_mutation</code>.
     */
    public void setCorrespondingAaMutation(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.variant_mutation_nucleotide.corresponding_aa_mutation</code>.
     */
    public String getCorrespondingAaMutation() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return VariantMutationNucleotide.VARIANT_MUTATION_NUCLEOTIDE.VARIANT_NAME;
    }

    @Override
    public Field<String> field2() {
        return VariantMutationNucleotide.VARIANT_MUTATION_NUCLEOTIDE.NUCLEOTIDE_MUTATION;
    }

    @Override
    public Field<String> field3() {
        return VariantMutationNucleotide.VARIANT_MUTATION_NUCLEOTIDE.CORRESPONDING_AA_MUTATION;
    }

    @Override
    public String component1() {
        return getVariantName();
    }

    @Override
    public String component2() {
        return getNucleotideMutation();
    }

    @Override
    public String component3() {
        return getCorrespondingAaMutation();
    }

    @Override
    public String value1() {
        return getVariantName();
    }

    @Override
    public String value2() {
        return getNucleotideMutation();
    }

    @Override
    public String value3() {
        return getCorrespondingAaMutation();
    }

    @Override
    public VariantMutationNucleotideRecord value1(String value) {
        setVariantName(value);
        return this;
    }

    @Override
    public VariantMutationNucleotideRecord value2(String value) {
        setNucleotideMutation(value);
        return this;
    }

    @Override
    public VariantMutationNucleotideRecord value3(String value) {
        setCorrespondingAaMutation(value);
        return this;
    }

    @Override
    public VariantMutationNucleotideRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VariantMutationNucleotideRecord
     */
    public VariantMutationNucleotideRecord() {
        super(VariantMutationNucleotide.VARIANT_MUTATION_NUCLEOTIDE);
    }

    /**
     * Create a detached, initialised VariantMutationNucleotideRecord
     */
    public VariantMutationNucleotideRecord(String variantName, String nucleotideMutation, String correspondingAaMutation) {
        super(VariantMutationNucleotide.VARIANT_MUTATION_NUCLEOTIDE);

        setVariantName(variantName);
        setNucleotideMutation(nucleotideMutation);
        setCorrespondingAaMutation(correspondingAaMutation);
    }
}
