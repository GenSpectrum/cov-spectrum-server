/*
 * This file is generated by jOOQ.
 */
package org.jooq.covspectrum.tables.records;


import org.jooq.Record1;
import org.jooq.covspectrum.tables.ConsensusSequence;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConsensusSequenceRecord extends UpdatableRecordImpl<ConsensusSequenceRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.consensus_sequence.sample_name</code>.
     */
    public void setSampleName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.sample_name</code>.
     */
    public String getSampleName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.consensus_sequence.ethid</code>.
     */
    public void setEthid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.ethid</code>.
     */
    public Integer getEthid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.consensus_sequence.header</code>.
     */
    public void setHeader(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.header</code>.
     */
    public String getHeader() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.consensus_sequence.seq</code>.
     */
    public void setSeq(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.seq</code>.
     */
    public String getSeq() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.consensus_sequence.coverage</code>.
     */
    public void setCoverage(Float value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.coverage</code>.
     */
    public Float getCoverage() {
        return (Float) get(4);
    }

    /**
     * Setter for <code>public.consensus_sequence.r1_basequal</code>.
     */
    public void setR1Basequal(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.r1_basequal</code>.
     */
    public String getR1Basequal() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.consensus_sequence.r2_basequal</code>.
     */
    public void setR2Basequal(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.r2_basequal</code>.
     */
    public String getR2Basequal() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.consensus_sequence.rejreads</code>.
     */
    public void setRejreads(Float value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.rejreads</code>.
     */
    public Float getRejreads() {
        return (Float) get(7);
    }

    /**
     * Setter for <code>public.consensus_sequence.alnreads</code>.
     */
    public void setAlnreads(Float value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.alnreads</code>.
     */
    public Float getAlnreads() {
        return (Float) get(8);
    }

    /**
     * Setter for <code>public.consensus_sequence.insertsize</code>.
     */
    public void setInsertsize(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.insertsize</code>.
     */
    public Integer getInsertsize() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>public.consensus_sequence.consensus_n</code>.
     */
    public void setConsensusN(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.consensus_n</code>.
     */
    public Integer getConsensusN() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>public.consensus_sequence.consensus_lcbases</code>.
     */
    public void setConsensusLcbases(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.consensus_lcbases</code>.
     */
    public Integer getConsensusLcbases() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>public.consensus_sequence.divergence</code>.
     */
    public void setDivergence(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.divergence</code>.
     */
    public Integer getDivergence() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>public.consensus_sequence.excess_divergence</code>.
     */
    public void setExcessDivergence(Float value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.excess_divergence</code>.
     */
    public Float getExcessDivergence() {
        return (Float) get(13);
    }

    /**
     * Setter for <code>public.consensus_sequence.number_n</code>.
     */
    public void setNumberN(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.number_n</code>.
     */
    public Integer getNumberN() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>public.consensus_sequence.number_gaps</code>.
     */
    public void setNumberGaps(Integer value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.number_gaps</code>.
     */
    public Integer getNumberGaps() {
        return (Integer) get(15);
    }

    /**
     * Setter for <code>public.consensus_sequence.clusters</code>.
     */
    public void setClusters(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.clusters</code>.
     */
    public String getClusters() {
        return (String) get(16);
    }

    /**
     * Setter for <code>public.consensus_sequence.gaps</code>.
     */
    public void setGaps(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.gaps</code>.
     */
    public String getGaps() {
        return (String) get(17);
    }

    /**
     * Setter for <code>public.consensus_sequence.all_snps</code>.
     */
    public void setAllSnps(String value) {
        set(18, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.all_snps</code>.
     */
    public String getAllSnps() {
        return (String) get(18);
    }

    /**
     * Setter for <code>public.consensus_sequence.flagging_reason</code>.
     */
    public void setFlaggingReason(String value) {
        set(19, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.flagging_reason</code>.
     */
    public String getFlaggingReason() {
        return (String) get(19);
    }

    /**
     * Setter for <code>public.consensus_sequence.fail_reason</code>.
     */
    public void setFailReason(String value) {
        set(20, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.fail_reason</code>.
     */
    public String getFailReason() {
        return (String) get(20);
    }

    /**
     * Setter for <code>public.consensus_sequence.sequencing_center</code>.
     */
    public void setSequencingCenter(String value) {
        set(21, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.sequencing_center</code>.
     */
    public String getSequencingCenter() {
        return (String) get(21);
    }

    /**
     * Setter for <code>public.consensus_sequence.sequencing_batch</code>.
     */
    public void setSequencingBatch(String value) {
        set(22, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.sequencing_batch</code>.
     */
    public String getSequencingBatch() {
        return (String) get(22);
    }

    /**
     * Setter for <code>public.consensus_sequence.comment</code>.
     */
    public void setComment(String value) {
        set(23, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.comment</code>.
     */
    public String getComment() {
        return (String) get(23);
    }

    /**
     * Setter for <code>public.consensus_sequence.variant_of_concern</code>.
     */
    public void setVariantOfConcern(String value) {
        set(24, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.variant_of_concern</code>.
     */
    public String getVariantOfConcern() {
        return (String) get(24);
    }

    /**
     * Setter for <code>public.consensus_sequence.is_random</code>.
     */
    public void setIsRandom(Boolean value) {
        set(25, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.is_random</code>.
     */
    public Boolean getIsRandom() {
        return (Boolean) get(25);
    }

    /**
     * Setter for <code>public.consensus_sequence.dont_release</code>.
     */
    public void setDontRelease(Boolean value) {
        set(26, value);
    }

    /**
     * Getter for <code>public.consensus_sequence.dont_release</code>.
     */
    public Boolean getDontRelease() {
        return (Boolean) get(26);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConsensusSequenceRecord
     */
    public ConsensusSequenceRecord() {
        super(ConsensusSequence.CONSENSUS_SEQUENCE);
    }

    /**
     * Create a detached, initialised ConsensusSequenceRecord
     */
    public ConsensusSequenceRecord(String sampleName, Integer ethid, String header, String seq, Float coverage, String r1Basequal, String r2Basequal, Float rejreads, Float alnreads, Integer insertsize, Integer consensusN, Integer consensusLcbases, Integer divergence, Float excessDivergence, Integer numberN, Integer numberGaps, String clusters, String gaps, String allSnps, String flaggingReason, String failReason, String sequencingCenter, String sequencingBatch, String comment, String variantOfConcern, Boolean isRandom, Boolean dontRelease) {
        super(ConsensusSequence.CONSENSUS_SEQUENCE);

        setSampleName(sampleName);
        setEthid(ethid);
        setHeader(header);
        setSeq(seq);
        setCoverage(coverage);
        setR1Basequal(r1Basequal);
        setR2Basequal(r2Basequal);
        setRejreads(rejreads);
        setAlnreads(alnreads);
        setInsertsize(insertsize);
        setConsensusN(consensusN);
        setConsensusLcbases(consensusLcbases);
        setDivergence(divergence);
        setExcessDivergence(excessDivergence);
        setNumberN(numberN);
        setNumberGaps(numberGaps);
        setClusters(clusters);
        setGaps(gaps);
        setAllSnps(allSnps);
        setFlaggingReason(flaggingReason);
        setFailReason(failReason);
        setSequencingCenter(sequencingCenter);
        setSequencingBatch(sequencingBatch);
        setComment(comment);
        setVariantOfConcern(variantOfConcern);
        setIsRandom(isRandom);
        setDontRelease(dontRelease);
    }
}
