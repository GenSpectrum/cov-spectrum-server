/*
 * This file is generated by jOOQ.
 */
package org.jooq.covspectrum.tables.records;


import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.covspectrum.tables.SpectrumWasteWaterResult;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpectrumWasteWaterResultRecord extends UpdatableRecordImpl<SpectrumWasteWaterResultRecord> implements Record2<String, JSONB> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.spectrum_waste_water_result.variant_name</code>.
     */
    public void setVariantName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.spectrum_waste_water_result.variant_name</code>.
     */
    public String getVariantName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.spectrum_waste_water_result.data</code>.
     */
    public void setData(JSONB value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.spectrum_waste_water_result.data</code>.
     */
    public JSONB getData() {
        return (JSONB) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, JSONB> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, JSONB> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return SpectrumWasteWaterResult.SPECTRUM_WASTE_WATER_RESULT.VARIANT_NAME;
    }

    @Override
    public Field<JSONB> field2() {
        return SpectrumWasteWaterResult.SPECTRUM_WASTE_WATER_RESULT.DATA;
    }

    @Override
    public String component1() {
        return getVariantName();
    }

    @Override
    public JSONB component2() {
        return getData();
    }

    @Override
    public String value1() {
        return getVariantName();
    }

    @Override
    public JSONB value2() {
        return getData();
    }

    @Override
    public SpectrumWasteWaterResultRecord value1(String value) {
        setVariantName(value);
        return this;
    }

    @Override
    public SpectrumWasteWaterResultRecord value2(JSONB value) {
        setData(value);
        return this;
    }

    @Override
    public SpectrumWasteWaterResultRecord values(String value1, JSONB value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SpectrumWasteWaterResultRecord
     */
    public SpectrumWasteWaterResultRecord() {
        super(SpectrumWasteWaterResult.SPECTRUM_WASTE_WATER_RESULT);
    }

    /**
     * Create a detached, initialised SpectrumWasteWaterResultRecord
     */
    public SpectrumWasteWaterResultRecord(String variantName, JSONB data) {
        super(SpectrumWasteWaterResult.SPECTRUM_WASTE_WATER_RESULT);

        setVariantName(variantName);
        setData(data);
    }
}
